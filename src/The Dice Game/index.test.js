import diceGame from './index';

test('diceGame', () => {
  expect(
    diceGame([
      [1, 3],
      [2, 6],
      [6, 3],
      [5, 6],
      [2, 2],
      [5, 6],
      [5, 4],
      [1, 3],
      [5, 6],
    ]),
  ).toBe('p4');
  expect(
    diceGame([
      [6, 1],
      [4, 3],
      [2, 5],
      [1, 4],
      [6, 2],
      [2, 5],
      [1, 4],
      [6, 4],
      [4, 3],
    ]),
  ).toBe('p1');
  expect(
    diceGame([
      [1, 2],
      [2, 3],
      [5, 4],
      [4, 4],
      [5, 2],
      [1, 1],
      [3, 6],
      [4, 4],
      [2, 2],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [2, 6],
      [3, 6],
      [6, 3],
      [6, 5],
      [4, 5],
      [5, 3],
      [5, 6],
      [2, 6],
      [6, 5],
    ]),
  ).toBe('p4');
  expect(
    diceGame([
      [5, 1],
      [2, 6],
      [1, 6],
      [6, 4],
      [3, 4],
      [2, 5],
      [6, 1],
      [3, 2],
      [4, 1],
    ]),
  ).toBe('p4');
  expect(
    diceGame([
      [1, 3],
      [6, 5],
      [5, 4],
      [5, 4],
      [2, 2],
      [4, 6],
      [4, 1],
      [5, 5],
      [4, 5],
    ]),
  ).toBe('p3');
  expect(
    diceGame([
      [2, 3],
      [3, 6],
      [5, 4],
      [3, 1],
      [2, 5],
      [1, 5],
      [5, 3],
      [4, 3],
      [2, 1],
    ]),
  ).toBe('p1');
  expect(
    diceGame([
      [2, 5],
      [4, 1],
      [2, 1],
      [4, 4],
      [6, 5],
      [4, 4],
      [1, 4],
      [3, 1],
      [1, 5],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [6, 3],
      [5, 5],
      [2, 3],
      [6, 6],
      [2, 5],
      [5, 1],
      [4, 4],
      [2, 2],
      [1, 3],
    ]),
  ).toBe('p1');
  expect(
    diceGame([
      [1, 6],
      [3, 2],
      [3, 4],
      [1, 2],
      [4, 1],
      [4, 2],
      [2, 5],
      [4, 1],
      [5, 1],
    ]),
  ).toBe('p3');
  expect(
    diceGame([
      [1, 4],
      [3, 6],
      [1, 6],
      [6, 1],
      [4, 1],
      [4, 3],
      [6, 5],
      [5, 6],
      [5, 6],
      [2, 1],
      [2, 4],
    ]),
  ).toBe('p4');
  expect(
    diceGame([
      [6, 2],
      [6, 1],
      [6, 1],
      [2, 2],
      [1, 1],
      [4, 3],
      [2, 6],
      [4, 6],
      [4, 6],
      [3, 4],
      [3, 5],
    ]),
  ).toBe('p3');
  expect(
    diceGame([
      [1, 2],
      [5, 6],
      [1, 3],
      [6, 5],
      [4, 6],
      [1, 3],
      [1, 3],
      [5, 3],
      [4, 1],
      [1, 1],
      [3, 3],
      [4, 1],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [4, 4],
      [4, 3],
      [1, 1],
      [1, 1],
      [3, 1],
      [4, 5],
      [2, 6],
      [2, 3],
      [1, 5],
      [5, 3],
      [4, 5],
      [5, 2],
      [2, 1],
    ]),
  ).toBe('p3');
  expect(
    diceGame([
      [1, 2],
      [2, 1],
      [4, 4],
      [1, 2],
      [1, 3],
      [1, 5],
      [2, 1],
      [4, 1],
      [5, 6],
      [5, 1],
      [4, 2],
      [5, 2],
      [5, 1],
    ]),
  ).toBe('p1');
  expect(
    diceGame([
      [4, 2],
      [4, 4],
      [1, 4],
      [1, 4],
      [1, 3],
      [3, 5],
      [6, 5],
      [1, 2],
      [5, 1],
      [6, 1],
      [2, 4],
      [2, 4],
      [5, 4],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [1, 4],
      [4, 2],
      [3, 5],
      [4, 2],
      [1, 2],
      [1, 2],
      [2, 4],
      [3, 5],
      [4, 1],
      [2, 2],
      [1, 1],
      [1, 1],
      [4, 3],
      [1, 1],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [1, 1],
      [4, 3],
      [2, 1],
      [6, 2],
      [3, 2],
      [3, 2],
      [4, 2],
      [2, 1],
      [6, 5],
      [6, 2],
      [4, 5],
      [4, 5],
      [5, 3],
      [3, 3],
    ]),
  ).toBe('p3');
  expect(
    diceGame([
      [3, 4],
      [2, 5],
      [5, 5],
      [2, 5],
      [6, 4],
      [6, 5],
      [6, 2],
      [6, 2],
      [3, 5],
      [6, 4],
      [4, 2],
      [5, 2],
      [3, 2],
      [6, 4],
      [1, 2],
      [5, 4],
      [5, 5],
    ]),
  ).toBe('p2');
  expect(
    diceGame([
      [1, 5],
      [3, 1],
      [2, 3],
      [5, 3],
      [1, 2],
      [1, 2],
      [6, 3],
      [2, 2],
      [6, 3],
      [2, 2],
      [5, 5],
      [3, 1],
      [3, 1],
      [6, 6],
      [6, 4],
      [5, 3],
      [3, 4],
      [6, 4],
    ]),
  ).toBe('p3');
});
